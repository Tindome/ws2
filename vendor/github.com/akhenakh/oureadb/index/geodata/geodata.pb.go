// Code generated by protoc-gen-go.
// source: geodata.proto
// DO NOT EDIT!

/*
Package geodata is a generated protocol buffer package.

It is generated from these files:
	geodata.proto

It has these top-level messages:
	Geometry
	GeoData
*/
package geodata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Geometry_Type int32

const (
	Geometry_POINT        Geometry_Type = 0
	Geometry_POLYGON      Geometry_Type = 1
	Geometry_MULTIPOLYGON Geometry_Type = 2
	Geometry_LINESTRING   Geometry_Type = 3
)

var Geometry_Type_name = map[int32]string{
	0: "POINT",
	1: "POLYGON",
	2: "MULTIPOLYGON",
	3: "LINESTRING",
}
var Geometry_Type_value = map[string]int32{
	"POINT":        0,
	"POLYGON":      1,
	"MULTIPOLYGON": 2,
	"LINESTRING":   3,
}

func (x Geometry_Type) String() string {
	return proto.EnumName(Geometry_Type_name, int32(x))
}
func (Geometry_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Geometry struct {
	Type        Geometry_Type `protobuf:"varint,1,opt,name=type,enum=geodata.Geometry_Type" json:"type,omitempty"`
	Geometries  []*Geometry   `protobuf:"bytes,2,rep,name=geometries" json:"geometries,omitempty"`
	Coordinates []float64     `protobuf:"fixed64,3,rep,packed,name=coordinates" json:"coordinates,omitempty"`
}

func (m *Geometry) Reset()                    { *m = Geometry{} }
func (m *Geometry) String() string            { return proto.CompactTextString(m) }
func (*Geometry) ProtoMessage()               {}
func (*Geometry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Geometry) GetGeometries() []*Geometry {
	if m != nil {
		return m.Geometries
	}
	return nil
}

type GeoData struct {
	Geometry   *Geometry                         `protobuf:"bytes,1,opt,name=geometry" json:"geometry,omitempty"`
	Properties map[string]*google_protobuf.Value `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GeoData) Reset()                    { *m = GeoData{} }
func (m *GeoData) String() string            { return proto.CompactTextString(m) }
func (*GeoData) ProtoMessage()               {}
func (*GeoData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GeoData) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *GeoData) GetProperties() map[string]*google_protobuf.Value {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*Geometry)(nil), "geodata.Geometry")
	proto.RegisterType((*GeoData)(nil), "geodata.GeoData")
	proto.RegisterEnum("geodata.Geometry_Type", Geometry_Type_name, Geometry_Type_value)
}

func init() { proto.RegisterFile("geodata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0xff, 0xdb, 0xc2, 0x1f, 0x18, 0x14, 0xeb, 0x1c, 0x48, 0x43, 0x3c, 0x34, 0x9c, 0x88,
	0xd1, 0x25, 0xe2, 0xc5, 0x78, 0xe2, 0x20, 0x69, 0x9a, 0x60, 0x21, 0xb5, 0x98, 0x78, 0x2c, 0x30,
	0x36, 0x44, 0x64, 0x9b, 0x65, 0x31, 0xe9, 0x87, 0xf4, 0xe0, 0x37, 0x32, 0xdd, 0x52, 0x68, 0xd4,
	0xdb, 0xee, 0x9b, 0xdf, 0xcc, 0x9b, 0x97, 0x81, 0xd3, 0x98, 0xc4, 0x32, 0x52, 0x11, 0x4f, 0xa4,
	0x50, 0x02, 0x6b, 0xfb, 0x6f, 0xe7, 0x22, 0x16, 0x22, 0x5e, 0x53, 0x5f, 0xcb, 0xf3, 0xdd, 0x6b,
	0x7f, 0xab, 0xe4, 0x6e, 0xa1, 0x72, 0xac, 0xfb, 0xc9, 0xa0, 0xee, 0x92, 0x78, 0x27, 0x25, 0x53,
	0xbc, 0x84, 0x8a, 0x4a, 0x13, 0xb2, 0x99, 0xc3, 0x7a, 0xad, 0x41, 0x9b, 0x17, 0x13, 0x0b, 0x80,
	0x87, 0x69, 0x42, 0x81, 0x66, 0xf0, 0x06, 0x20, 0xce, 0xe5, 0x15, 0x6d, 0x6d, 0xc3, 0x31, 0x7b,
	0xcd, 0xc1, 0xf9, 0xaf, 0x8e, 0xa0, 0x04, 0xa1, 0x03, 0xcd, 0x85, 0x10, 0x72, 0xb9, 0xda, 0x44,
	0x8a, 0xb6, 0xb6, 0xe9, 0x98, 0x3d, 0x16, 0x94, 0xa5, 0xee, 0x10, 0x2a, 0x99, 0x05, 0x36, 0xa0,
	0x3a, 0x9d, 0x78, 0x7e, 0x68, 0xfd, 0xc3, 0x26, 0xd4, 0xa6, 0x93, 0xf1, 0x8b, 0x3b, 0xf1, 0x2d,
	0x86, 0x16, 0x9c, 0x3c, 0xce, 0xc6, 0xa1, 0x57, 0x28, 0x06, 0xb6, 0x00, 0xc6, 0x9e, 0x3f, 0x7a,
	0x0a, 0x03, 0xcf, 0x77, 0x2d, 0xb3, 0xfb, 0xc5, 0xa0, 0xe6, 0x92, 0x78, 0x88, 0x54, 0x84, 0xd7,
	0x50, 0xdf, 0xbb, 0xa7, 0x3a, 0xd2, 0x9f, 0x0b, 0x1e, 0x10, 0x1c, 0x02, 0x24, 0x52, 0x24, 0x24,
	0xd5, 0x31, 0x91, 0x53, 0x6e, 0xc8, 0x86, 0xf2, 0xe9, 0x01, 0x19, 0x6d, 0x74, 0xc0, 0x63, 0x4f,
	0x67, 0x06, 0x67, 0x3f, 0xca, 0x68, 0x81, 0xf9, 0x46, 0xb9, 0x7d, 0x23, 0xc8, 0x9e, 0x78, 0x05,
	0xd5, 0x8f, 0x68, 0xbd, 0x23, 0xdb, 0xd0, 0x2b, 0xb5, 0x79, 0x7e, 0x1f, 0x5e, 0xdc, 0x87, 0x3f,
	0x67, 0xd5, 0x20, 0x87, 0xee, 0x8d, 0x3b, 0x36, 0xff, 0xaf, 0x4b, 0xb7, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x6d, 0x38, 0x0e, 0xdc, 0xe2, 0x01, 0x00, 0x00,
}
